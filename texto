/* 
Clase 2 - ¿Qué son y para que sirve HTML y CSS?
-------------------------------------------------------------
HTML -> Es un Lenguaje de Marcado de Hipertexto 
Es el código que ayuda a estructurar una página web

CSS -> Hojas de estilo en cascada
Es el lenguaje que da vida a la estrutura web

Revisión de la página de Platzi 

El inspector de elementos en la parte del frontend para HTML y CSS tiene dos partes
Es una herramienta de gran utilidad, nos permite visualizar de forma detenida cada elemento que podemos ver en la página web 

La estructura del HTML (en la parte superior)
Como la estructura de CSS (en la parte baja)

Clase 3 - ¿Motores de renderizado?
-------------------------------------------------------------
Significa pasar de archivos a pixeles en pantalla 

Cada explorador tienen diferentes motores de renderizado 

Chrome  -> blink
Edge    -> edge HTML
Safari  -> webkit
Firefoz -> Gecko

Ellos hacen lo mismo para pasar de archivos a pixeles 

El navegador hace 5 pasos.

1. Primero se vuelve los archivos a objetos -> crea el DOM (son objetos que el navegador puede comprender)
2. Calcula el estilo correspondiente a cada nodo DOM, es el arbol de la página web 
3. Calcula las dimensiones de cada nodo y donde va en la pantalla
4. Pinta las cajas distribuidas 
5. Toma las capas y las convierte en una imagen para mostrar en pantalla 


Clase 4 - Anatomía de un documento HTML y sus elementos 
------------------------------------------------------------------

 Un elemento tiene la siguiente sintaxis 
 Elemento que tiene 
 -> Etiqueta de apertura (picoparentesis)
 -> Contenido 
 -> Etiquta de cierre (picoparentesis)
Adicionalmente se colocan atributos 
Etiqueta de apertura 
h1 class = "title"
Se define el atributo y valor 

Anidamiento 
Se van sumando diferentes elementos de una estructura de HTML 

Elementos vacíos 
Hay elementos que no necesariamente se cierran, por ejemplo img 

Anatomía de un documento de un HTML
Los aspectos básicos son los siguientes:

El doctype menciona que es un documento de html
El lenguaje lang 
Head es la cabecera 

Clase 5 - ¿Qué es el HTML semántico?
--------------------------------------------------------------
HTML semántico 
Etiquetas con significado 
Ayuda a tu sitio a ser accesible
Mejora tu posicionamiento sectionDódigo mas claro 

El esqueleto básico sería 
Header
nav
section
article
aside
footer

<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    <header>
        Hola
    </header>

    <main>
        <nav>
            Menu
        </nav>
        <section>
            <article>
                Cuerpo
            </article>
        </section>
    </main>
    <footer></footer>
</body>
</html>

clase 6 - Etiquetas de HTML más usadas
-------------------------------------------------------
Layout -> Es básicamente el diseño de toda la página 
Header
Nav
Section
Article
Aside
footer

-> Enlaces interacción con otras paginas web
a
Textos -> Elementos para la manipulación del texto
h1-h6
p
span
i
em
strong
b
br salto de linea

--> Imagenes y videos 
img
svg
iframe
video

--> Formularios 
Form 
input
label
button

--> Listas
ul
li
ol

https://htmlreference.io/
Manual de referencia 

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    <nav>
        <ul>
            <li>Home</li>
            <li>Contacto</li>
            <li>Portafolio</li>
            <li>About us</li>
        </ul>
    </nav>
    <section>
        <article>
            <img src="img/pug-con-gorro-navideno_1280x720_xtrafondos.com.jpg" alt="">
        </article>
        <article>
            <form action="">
                <label for="name">Name: </label>
                <input type="text" id="name">
            </form>
            <a href="https://platzi.com/home">Tu platzi</a>
        </article>
    </section>
</body>
</html>

Clase 7 - Anatomia de una declaración CSS: selectores, propiedades y valores
-----------------------------------------------------------------

Anatomía de uyna declaración de un CSS

Selector. Es un puente que comunica el CSS al html 
Propiedad. 
Valor.

Css ya tiene unos colores predeterminados 

clase 8 - Tipos de selectores: básicos y combinadores
---------------------------------------------------------
Selectores básicos 
De tipo     --> Cual es la etiqueta que vamosa  modificar 
De clase    --> Este afecta a todos los elementos que tengan esta clase 
De ID       --> Este afecta solamente a un solo selector
De atributo --> Se selecciona los atributos del selector 
Universal   --> Aplica a toda la hoja de estilos 

Selectores combinadores

Descendientes div p --> Hijo
Hijo directo div > p
Elemento adyacente div + p
General de hermanos div ~ p

Clase 9 - Pseudoclases y pseudoelementos
______________________________

Las pseudoclases nos ayudan a llegar a aquellas activivades o acciones que hace el usuario 

Por ejemplo
Pseudoclase :
:active
:focus
:hover
:nth-child(n)

Pseudoelementos ::
Son aquellso que nos permiten acceder a elementos de html que no son accesibles 
::after
::before
::first-letter
::placeholder

Clase 10 - Cascada y especifidad en CSS
-------------------------------------------------
--> Cascada Cascading Style Sheet Hojas de estilo en cascada 
Importa la importancia de como se escriben 
El orden como se escribe importa porque se sobreescribe los elementos 



--> Especifidad
Los navegadores determinan que reglas de css deben aplicarse a las etiqutas html
El orden y orgiden de clasificacion intervienen 

A veces los navegadores no saben que reglas seguir y entran en la especificidad

entre mayor especificidad mayor la aplicación de los estilos 

Reglas . La importancia va de arriba hacia abajo

x 0 0 0 0        !important
  x 0 0 0        Estilos en linea. colocar un atributo 
    x 0 0        ID identificadores
      x 0        Clases y atributos y pseudoclases
        x        Elementos y pseudoelementos
        0        Selector universal

#id h1::first-letter

id             --> 100
h1             --> 1
::first-letter --> 1

102 Más específico

p .sidemenu div:hover

p         --> 1 
.sidemenu --> 10
div       --> 1
:hover    --> 10

22 Menos especificidad

Se aplicaría primero la regla 

Clase 11 - Tipos de display más usados: block, inline e inline-block
------------------------------------------------------------------------

Display --> Es el tipo de visualización que tienen los elementos 

--> Block. Toma todo el ancho de la pantalla (siempre que no se defina por css)
--> Inline. Toma solo el espacio que tiene el elemento
            No aplica elementos de widht ni height solamente elementos horizontales
--> inline-block. Alinea los elementos siempre y cuando las dimensiones sean mas pequeñas que la linea
--> Flex
--> Grid

Clase 12 - Tipos de display mas usados: flexbox y CSS grid
---------------------------------------------------------------------------
--> Flexbox - Cursos independientes
--> CSS Grid - Cursos independientes 

Clase 13 - Modelo de caja
---------------------------------------------------------------------------
Los elementos tienen diferentes caracteristicas (las etiquetas) son caja cada una de estas cajas son las siguientes propiedades:

Contenido  --> Tamaño del elemento
Padding    --> Margen interno
Borden     --> Linea que contorna el objeto
Margen     --> Margen externo 

Clase 14 - Colapso de márgenes
--------------------------------------------------------------------------------
Hay colapsos de forma vertical cuando se ocupan elementos básicos 

Hay dos elementos de bloque adyacentes 
p sol 
p luna 

No se colapsa cuando se utilizan elementos de flexbox, o grid y elementos que no sean de bloque 

Entonces la solución para evitar que se colapsen es usar flexbox

Clase 15 - Posicionamiento en CSS
---------------------------------------------------------------------------------------

Nos ayuda a ubicar elementos 
Relative. El elemento queda en la posicion relativa, es independiente a los demás elementos
Absolute. Queda posicionado dentro de un elemento padre relative
Fixed. Se queda pegado en la parte inicial 
Sticky. Pegajoso se utiliza para quedar en la parte superior en las listas crea un efecto bastante interesante 
static. Es la posicion por defecto
initial. Es la posicion que se formatea al inicio 
inherital. Es la posicion heredada del padre

Cuando hablamoos de las medidas relative y absolute se desbloquean las propiedes

Estas propiedades son necesarias para poder mover los elementos en diferentes posiciones

Top
left
Right
bottom 

Clase 16 - Z-index y el contexto de apilamiento 
-------------------------------------------------------------
como los elementos se van acomodando 

El orden del html importa en la manera de la creación 
Todos los elementos que estan abajo quedan delante 

z index solamente funciona con ciertos tipos de position

También depende si son padres o son hijos 

Clase 17 - Propiedades y valores de CSS más usados
----------------------------------
--> Layout 
Display
--> Modelo de caja
Margin
padding
border
--> Tamaños
width
height
--> Colores de fondo
background
background-color
--> Textos
Font-size
Font- weight
font-family
text-aling
color

https://cssreference.io/

Clase 18 - Unidades de medida 
-------------------------------------
Medidas absolutas --> Medidas que no dependen de nadie mas para ser ellas mismas 
px, pc, pt, in, cm , mm

Meduidas Relativas --> Dependen de alguien mas
rem, em, vw, vh, vmin, vmax, ex, ch

clase 19 - Responsive Design 
------------------------------------------
Diseño responsivo Que un sitio web se vea bien en varias medidas de pantalla 

Media queris se ocupan para hacer el ajuste de lkas diferentes pantallas 

/* min width -> desde */
/* max-widht --> hasta */

clase 20 - ¿Qué son las arquitecturas CSS? ¿Para que sirven?
-----------------------------------
Objetivos Ser predecible
Reutilizable
Mantenible
Escalable

Buenas prácticas 
Lineamientos . Como estructurar el código
Documentación. Información del proyecto
Estándares. Las buenas practicas
Componentes. REACT  

Las arquitecturas son las practicas buenas practicas para que sea mas sencillo, 

Refactor es cambiar nuestro código 

Para hacer mas mantenible nuestro codigo 

Clase 21 - OOCSS, BEM, SMACSS, ITCSS y Atomic Design
-----------------------------------------
OOCSS. Tener objetos que son estructuras principales que van a estar encapsuladas en mascaras 

Separa el contenedor y el contenido

BEM . Elemento Bloque Modificador 

Bloque la card
Elemento img 
Modificador el color que se coloca 

SMACSS 
El orden que se estructura los elemenbtos de html 
base
Layout
Module
state
theme

SMACSS 
Separa todo lo que compone la pagina web en pequeñas estructuras

ITCSS
especificidad
Magnitud
Claridad

Ajustes
Herramientas

Atomic Design 

Atomos. Elementos unicos 
input 
Moleculas Elementos mas complejos
input con boton 
Organismos Elementos mucho mas complejos
Formulario 

Clase 22 - CSS para entrevistas y el mundo laboral 
--------------------------------------------

HTML
CSS
JS

Tener las bases de estas 3 tecnologías 

layout 
flexbox
cssGrid
position

Calida de código 
Cada uno de los conceptos previos 



Para hacer ejerccios 
https://www.frontendmentor.io/


Los no es el nuevo si xD

Clase 23 - Continúa con el curso práctico de frontend Developer
--------------------------------------------------------------


Examen

Descubre las ventajas del responsive design y las arquitecturas CSS

Comprende cómo se transforma el código HTML y CSS en página web

Conoce las etiquetas más importantes de HTML

Usa correctamente las propiedades y selectores de CSS

























































































*/